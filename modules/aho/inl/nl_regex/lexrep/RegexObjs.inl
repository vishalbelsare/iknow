static const Char Regex0Str[] = {92, 100, 43, 92, 45, 106, 97, 114, 105, 103, }; // "\d+\-jarig"
static const Char Regex1Str[] = {92, 100, 43, 92, 45, 106, 97, 114, 105, 103, 101, }; // "\d+\-jarige"
static const Char Regex2Str[] = {92, 100, 43, 92, 45, 106, 97, 114, 105, 103, 101, 110, }; // "\d+\-jarigen"
static const Char Regex3Str[] = {40, 91, 48, 45, 49, 93, 92, 100, 124, 91, 50, 93, 91, 48, 45, 51, 93, 41, 92, 58, 91, 48, 45, 53, 93, 92, 100, 40, 92, 58, 91, 48, 45, 53, 93, 92, 100, 41, 63, }; // "([0-1]\d|[2][0-3])\:[0-5]\d(\:[0-5]\d)?"
static const Char Regex4Str[] = {40, 91, 48, 45, 49, 93, 92, 100, 124, 91, 50, 93, 91, 48, 45, 51, 93, 124, 92, 100, 41, 91, 92, 58, 92, 46, 93, 40, 91, 48, 45, 53, 93, 92, 100, 124, 92, 100, 41, 117, }; // "([0-1]\d|[2][0-3]|\d)[\:\.]([0-5]\d|\d)u"
static const Char Regex5Str[] = {40, 91, 48, 45, 49, 93, 92, 100, 124, 91, 50, 93, 91, 48, 45, 51, 93, 124, 92, 100, 41, 117, 40, 91, 48, 45, 53, 93, 92, 100, 124, 92, 100, 41, }; // "([0-1]\d|[2][0-3]|\d)u([0-5]\d|\d)"
static const Char Regex6Str[] = {92, 91, 92, 100, 123, 49, 44, 50, 125, 92, 93, }; // "\[\d{1,2}\]"
static const Char Regex7Str[] = {91, 35, 42, 92, 45, 43, 61, 93, 91, 35, 42, 92, 45, 43, 61, 93, 91, 35, 42, 92, 45, 43, 61, 93, 91, 35, 42, 92, 45, 43, 61, 93, 91, 35, 42, 92, 45, 43, 61, 93, 91, 35, 42, 92, 45, 43, 61, 93, 43, }; // "[#*\-+=][#*\-+=][#*\-+=][#*\-+=][#*\-+=][#*\-+=]+"
static const Char Regex8Str[] = {91, 8804, 8805, 61, 92, 45, 92, 60, 92, 62, 92, 43, 92, 46, 93, 63, 92, 100, 43, 40, 91, 92, 46, 92, 44, 93, 92, 100, 43, 41, 63, 40, 91, 92, 46, 92, 44, 93, 92, 100, 43, 41, 63, }; // "[≤≥=\-\<\>\+\.]?\d+([\.\,]\d+)?([\.\,]\d+)?"
static const Char Regex9Str[] = {92, 100, 43, 92, 47, 92, 100, 43, }; // "\d+\/\d+"
static const Char Regex10Str[] = {92, 100, 43, 40, 101, 124, 45, 101, 124, 100, 101, 124, 45, 100, 101, 124, 45, 115, 116, 101, 124, 115, 116, 101, 41, }; // "\d+(e|-e|de|-de|-ste|ste)"
static const Char Regex11Str[] = {91, 8804, 8805, 61, 92, 45, 92, 60, 92, 62, 92, 43, 93, 63, 92, 100, 43, 40, 91, 92, 46, 92, 44, 93, 92, 100, 43, 41, 63, 92, 45, 92, 100, 43, 40, 91, 92, 46, 92, 44, 93, 92, 100, 43, 41, 63, }; // "[≤≥=\-\<\>\+]?\d+([\.\,]\d+)?\-\d+([\.\,]\d+)?"
static const Char Regex12Str[] = {92, 100, 43, 120, 92, 100, 43, }; // "\d+x\d+"
static const Char Regex13Str[] = {92, 100, 43, 120, }; // "\d+x"
static const Char Regex14Str[] = {40, 91, 49, 93, 92, 100, 123, 51, 125, 41, 40, 92, 45, 41, 40, 40, 91, 49, 93, 92, 100, 123, 51, 125, 41, 124, 40, 91, 50, 93, 91, 48, 93, 92, 100, 123, 50, 125, 41, 124, 92, 100, 123, 49, 44, 50, 125, 41, }; // "([1]\d{3})(\-)(([1]\d{3})|([2][0]\d{2})|\d{1,2})"
static const Char Regex15Str[] = {40, 91, 50, 93, 91, 48, 93, 92, 100, 123, 50, 125, 41, 40, 92, 45, 41, 40, 40, 91, 50, 93, 91, 48, 93, 92, 100, 123, 50, 125, 41, 124, 92, 100, 123, 49, 44, 50, 125, 41, }; // "([2][0]\d{2})(\-)(([2][0]\d{2})|\d{1,2})"
static const Char Regex16Str[] = {40, 105, 124, 118, 124, 120, 41, 123, 49, 44, 53, 125, 91, 92, 45, 93, 40, 105, 124, 118, 124, 120, 41, 123, 49, 44, 53, 125, }; // "(i|v|x){1,5}[\-](i|v|x){1,5}"
static const Char Regex17Str[] = {40, 105, 124, 118, 124, 120, 41, 123, 49, 44, 53, 125, }; // "(i|v|x){1,5}"
static const Char Regex18Str[] = {40, 105, 124, 118, 124, 120, 41, 123, 49, 44, 53, 125, 40, 92, 45, 41, 63, 40, 101, 41, }; // "(i|v|x){1,5}(\-)?(e)"
static const Char Regex19Str[] = {97, 97, 110, 103, 101, 46, 123, 51, 44, 125, 91, 114, 115, 102, 108, 109, 98, 93, 100, }; // "aange.{3,}[rsflmb]d"
static const Char Regex20Str[] = {97, 97, 110, 103, 101, 46, 123, 51, 44, 125, 91, 107, 102, 115, 104, 112, 93, 116, }; // "aange.{3,}[kfshp]t"
static const Char Regex21Str[] = {97, 102, 103, 101, 46, 123, 51, 44, 125, 91, 114, 115, 102, 108, 109, 98, 93, 100, }; // "afge.{3,}[rsflmb]d"
static const Char Regex22Str[] = {97, 102, 103, 101, 46, 123, 51, 44, 125, 91, 107, 102, 115, 104, 112, 93, 116, }; // "afge.{3,}[kfshp]t"
static const Char Regex23Str[] = {98, 105, 106, 101, 101, 110, 103, 101, 46, 123, 51, 44, 125, 91, 114, 115, 102, 108, 109, 98, 93, 100, }; // "bijeenge.{3,}[rsflmb]d"
static const Char Regex24Str[] = {98, 105, 106, 101, 101, 110, 103, 101, 46, 123, 51, 44, 125, 91, 107, 102, 115, 104, 112, 93, 116, }; // "bijeenge.{3,}[kfshp]t"
static const Char Regex25Str[] = {98, 105, 106, 103, 101, 46, 123, 51, 44, 125, 91, 114, 115, 102, 108, 109, 98, 93, 100, }; // "bijge.{3,}[rsflmb]d"
static const Char Regex26Str[] = {98, 105, 106, 103, 101, 46, 123, 51, 44, 125, 91, 107, 102, 115, 104, 112, 93, 116, }; // "bijge.{3,}[kfshp]t"
static const Char Regex27Str[] = {100, 111, 111, 114, 103, 101, 46, 123, 51, 44, 125, 91, 114, 115, 102, 108, 109, 98, 93, 100, }; // "doorge.{3,}[rsflmb]d"
static const Char Regex28Str[] = {100, 111, 111, 114, 103, 101, 46, 123, 51, 44, 125, 91, 107, 102, 115, 104, 112, 93, 116, }; // "doorge.{3,}[kfshp]t"
static const Char Regex29Str[] = {103, 101, 46, 123, 51, 44, 125, 101, 101, 114, 100, }; // "ge.{3,}eerd"
static const Char Regex30Str[] = {40, 91, 48, 45, 57, 93, 124, 91, 48, 49, 50, 93, 91, 48, 45, 57, 93, 124, 51, 91, 48, 45, 49, 93, 41, 92, 47, 40, 48, 91, 48, 45, 57, 93, 124, 49, 91, 48, 45, 50, 93, 124, 91, 48, 45, 57, 93, 41, }; // "([0-9]|[012][0-9]|3[0-1])\/(0[0-9]|1[0-2]|[0-9])"
static const Char Regex31Str[] = {40, 91, 49, 45, 57, 93, 124, 48, 91, 49, 45, 57, 93, 124, 91, 49, 44, 50, 93, 92, 100, 124, 51, 91, 48, 44, 49, 93, 41, 40, 40, 45, 40, 91, 49, 45, 57, 93, 124, 48, 91, 49, 45, 57, 93, 124, 91, 49, 93, 91, 48, 45, 50, 93, 41, 45, 41, 124, 40, 47, 40, 91, 49, 45, 57, 93, 124, 48, 91, 49, 45, 57, 93, 124, 91, 49, 93, 91, 48, 45, 50, 93, 41, 47, 41, 124, 40, 92, 46, 40, 91, 49, 45, 57, 93, 124, 48, 91, 49, 45, 57, 93, 124, 91, 49, 93, 91, 48, 45, 50, 93, 41, 92, 46, 41, 41, 91, 48, 45, 57, 93, 91, 48, 45, 57, 93, 40, 91, 48, 45, 57, 93, 91, 48, 45, 57, 93, 41, 63, }; // "([1-9]|0[1-9]|[1,2]\d|3[0,1])((-([1-9]|0[1-9]|[1][0-2])-)|(/([1-9]|0[1-9]|[1][0-2])/)|(\.([1-9]|0[1-9]|[1][0-2])\.))[0-9][0-9]([0-9][0-9])?"
static const Char Regex32Str[] = {40, 40, 91, 48, 45, 49, 93, 41, 63, 92, 100, 124, 91, 50, 93, 91, 48, 45, 51, 93, 41, 92, 46, 91, 48, 45, 53, 93, 92, 100, }; // "(([0-1])?\d|[2][0-3])\.[0-5]\d"

